{"ast":null,"code":"var _jsxFileName = \"/home/sachindevtech/Desktop/TestQS_2/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles/Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settingsIcon = '/icons/settings.svg';\nconst chevronIcon = '/icons/chevron-down.svg';\nfunction Navbar({\n  grouping,\n  ordering,\n  setGrouping,\n  setOrdering\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const button = useRef(null);\n  const drop = useRef(null);\n  useEffect(() => window.addEventListener('click', ev => {\n    if (drop.current && drop.current.contains(ev.target)) {\n      setIsOpen(true);\n    } else if (button.current && button.current.contains(ev.target)) {\n      setIsOpen(!isOpen);\n    } else {\n      setIsOpen(false);\n    }\n  }));\n  function capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-container\",\n      ref: button,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: settingsIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chevronIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-settings\",\n        ref: drop,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-setting\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Grouping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: capitalize(grouping),\n            onChange: e => {\n              setGrouping(e.target.children[e.target.selectedIndex].getAttribute('data-id'));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              \"data-id\": \"status\",\n              children: \"Status\"\n            }, 'status', false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              \"data-id\": \"user\",\n              children: \"User\"\n            }, 'user', false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              \"data-id\": \"priority\",\n              children: \"Priority\"\n            }, 'priority', false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-setting\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Sorting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: capitalize(ordering),\n            onChange: e => {\n              console.log(e);\n              setOrdering(e.target.children[e.target.selectedIndex].getAttribute('data-id'));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              \"data-id\": \"title\",\n              children: \"Title\"\n            }, 'title', false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), grouping !== 'priority' ? /*#__PURE__*/_jsxDEV(\"option\", {\n              \"data-id\": \"priority\",\n              children: \"Priority\"\n            }, 'priority', false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 52\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"74KI8ZyHv2V+ElvBHy5IBdcc/6w=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","settingsIcon","chevronIcon","Navbar","grouping","ordering","setGrouping","setOrdering","_s","isOpen","setIsOpen","button","drop","window","addEventListener","ev","current","contains","target","capitalize","word","toUpperCase","slice","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","selectedIndex","getAttribute","console","log","_c","$RefreshReg$"],"sources":["/home/sachindevtech/Desktop/TestQS_2/src/components/Navbar.jsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport './styles/Navbar.css'\n\nconst settingsIcon = '/icons/settings.svg'\nconst chevronIcon = '/icons/chevron-down.svg'\n\nfunction Navbar({grouping, ordering, setGrouping, setOrdering}) {\n    const [isOpen, setIsOpen] = useState(false);\n    const button = useRef(null);\n    const drop = useRef(null);\n    useEffect(() => window.addEventListener('click', ev => {\n        if(drop.current && drop.current.contains(ev.target)) {setIsOpen(true)}\n        else if(button.current && button.current.contains(ev.target)) {setIsOpen(!isOpen)}\n        else {setIsOpen(false)}\n    }));\n\n    function capitalize(word) {\n        return word[0].toUpperCase() + word.slice(1);\n    }\n\n  return (\n    <div className='navbar'>\n        <div className='display-container' ref={button}> \n            <div className='display'>\n                <img src={settingsIcon} />\n                <span>Display</span>\n                <img src={chevronIcon} />\n            </div>\n            {isOpen ? <div className='display-settings' ref={drop}>\n                <div className='display-setting'>\n                    <div>Grouping</div>\n                    <select value={capitalize(grouping)} onChange={e => {setGrouping(e.target.children[e.target.selectedIndex].getAttribute('data-id'))}}>\n                        <option key='status' data-id='status'>Status</option>\n                        <option key='user' data-id='user'>User</option>\n                        <option key='priority' data-id='priority'>Priority</option>\n                    </select>\n                </div>\n                <div className='display-setting'>\n                    <div>Sorting</div>\n                    <select value={capitalize(ordering)} onChange={e => {console.log(e); setOrdering(e.target.children[e.target.selectedIndex].getAttribute('data-id'))}}>\n                        <option key='title' data-id='title'>Title</option>\n                        {grouping !== 'priority' ? <option key='priority' data-id='priority'>Priority</option> : null}\n                    </select>\n                </div>\n            </div> : null}\n        </div>\n    </div>\n  )\n}\n\nexport default Navbar"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACxD,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAG,qBAAqB;AAC1C,MAAMC,WAAW,GAAG,yBAAyB;AAE7C,SAASC,MAAMA,CAAC;EAACC,QAAQ;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMe,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMc,IAAI,GAAGd,MAAM,CAAC,IAAI,CAAC;EACzBD,SAAS,CAAC,MAAMgB,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,EAAE,IAAI;IACnD,IAAGH,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACI,OAAO,CAACC,QAAQ,CAACF,EAAE,CAACG,MAAM,CAAC,EAAE;MAACR,SAAS,CAAC,IAAI,CAAC;IAAA,CAAC,MACjE,IAAGC,MAAM,CAACK,OAAO,IAAIL,MAAM,CAACK,OAAO,CAACC,QAAQ,CAACF,EAAE,CAACG,MAAM,CAAC,EAAE;MAACR,SAAS,CAAC,CAACD,MAAM,CAAC;IAAA,CAAC,MAC7E;MAACC,SAAS,CAAC,KAAK,CAAC;IAAA;EAC1B,CAAC,CAAC,CAAC;EAEH,SAASS,UAAUA,CAACC,IAAI,EAAE;IACtB,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;EAChD;EAEF,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBxB,OAAA;MAAKuB,SAAS,EAAC,mBAAmB;MAACE,GAAG,EAAEd,MAAO;MAAAa,QAAA,gBAC3CxB,OAAA;QAAKuB,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpBxB,OAAA;UAAK0B,GAAG,EAAEzB;QAAa;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1B9B,OAAA;UAAAwB,QAAA,EAAM;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpB9B,OAAA;UAAK0B,GAAG,EAAExB;QAAY;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,EACLrB,MAAM,gBAAGT,OAAA;QAAKuB,SAAS,EAAC,kBAAkB;QAACE,GAAG,EAAEb,IAAK;QAAAY,QAAA,gBAClDxB,OAAA;UAAKuB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BxB,OAAA;YAAAwB,QAAA,EAAK;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnB9B,OAAA;YAAQ+B,KAAK,EAAEZ,UAAU,CAACf,QAAQ,CAAE;YAAC4B,QAAQ,EAAEC,CAAC,IAAI;cAAC3B,WAAW,CAAC2B,CAAC,CAACf,MAAM,CAACM,QAAQ,CAACS,CAAC,CAACf,MAAM,CAACgB,aAAa,CAAC,CAACC,YAAY,CAAC,SAAS,CAAC,CAAC;YAAA,CAAE;YAAAX,QAAA,gBACjIxB,OAAA;cAAqB,WAAQ,QAAQ;cAAAwB,QAAA,EAAC;YAAM,GAAhC,QAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgC,CAAC,eACrD9B,OAAA;cAAmB,WAAQ,MAAM;cAAAwB,QAAA,EAAC;YAAI,GAA1B,MAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA4B,CAAC,eAC/C9B,OAAA;cAAuB,WAAQ,UAAU;cAAAwB,QAAA,EAAC;YAAQ,GAAtC,UAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACN9B,OAAA;UAAKuB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BxB,OAAA;YAAAwB,QAAA,EAAK;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClB9B,OAAA;YAAQ+B,KAAK,EAAEZ,UAAU,CAACd,QAAQ,CAAE;YAAC2B,QAAQ,EAAEC,CAAC,IAAI;cAACG,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;cAAE1B,WAAW,CAAC0B,CAAC,CAACf,MAAM,CAACM,QAAQ,CAACS,CAAC,CAACf,MAAM,CAACgB,aAAa,CAAC,CAACC,YAAY,CAAC,SAAS,CAAC,CAAC;YAAA,CAAE;YAAAX,QAAA,gBACjJxB,OAAA;cAAoB,WAAQ,OAAO;cAAAwB,QAAA,EAAC;YAAK,GAA7B,OAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA8B,CAAC,EACjD1B,QAAQ,KAAK,UAAU,gBAAGJ,OAAA;cAAuB,WAAQ,UAAU;cAAAwB,QAAA,EAAC;YAAQ,GAAtC,UAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoC,CAAC,GAAG,IAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,GAAG,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACtB,EAAA,CA1CQL,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AA4Cf,eAAeA,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}